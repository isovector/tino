#!/usr/bin/env bash

USER=$(whoami)
LSB=$(lsb_release -a 2>/dev/null | grep Codename | cut -d "	" -f 2-)
FRILLS=0

inpath() { [ -x "`which "$1" 2>/dev/null`" ]; }

install() {
    as_root apt-get install "$@" -y
}

remove() {
    as_root apt-get remove "$@" -y
}

# frills are big packages that aren't necesssary
frill() {
    # make this do frill installs at some point
    return
}

warning() {
    echo "preparing to install ${1}...";
    echo -n "continue? ";
    read
    init_root
}

init_root() {
    if [ "`id -u`" -ne 0 ]; then
        if inpath sudo && sudo -l >/dev/null 2>&1; then
            as_root() {
                if [ "$1" = exec ]; then ex="exec"; shift; fi
                $ex sudo "$@"
            }
        else
            echo "Warning: sudo not installed or not configured" >&2
            as_root() {
                if [ "$1" = exec ]; then ex="exec"; shift; fi
                $ex su -c "$*"
            }
        fi
    else
        as_root() { "$@" ; }
    fi
}

# TODO: install system font

purge() {
    echo "continuing past this point will delete a bunch of stuff"
    warning "purge"
    remove firefox command-not-found command-not-found-data language-selector-common
    remove bluez openbox
}

setup_basic() {
    # setup pacman
    as_root wget -O /usr/local/bin/pacman https://raw.githubusercontent.com/icy/pacapt/5b8990742657c1d44c0ee63d223afbf60d96e026/pacapt
    as_root chmod 755 /usr/local/bin/pacman

    # install super basic packages
    as_root apt-get update
    install curl zsh git python vim ssh tmux

    frill install python3

    # setup a sane env
    chsh --shell /usr/bin/zsh
    cd
    mkdir .src

    # install tino utils
    git clone https://github.com/isovector/tino .tino
    cd .tino
    ./bin/install dotfiles
    ./bin/install vim

    # setup git
    git config --global user.name "Sandy Maguire"
    git config --global user.email "sandy@sandymaguire.me"
    git config --global credential.helper cache
    git config --global credential.helper 'cache --timeout=3600'

    # setup ssh and net
    cd
    mkdir .ssh
    cd .ssh
    yes '' | ssh-keygen -t rsa -C "sandy@sandymaguire.me"
    as_root ssh-add id_rsa
    as_root adduser $USER netdev
}

setup_env() {
    return
}

setup_extra() {
    # install pragmata pro
    as_root mkdir -p /usr/share/fonts/truetype/pragmata
    as_root wget -O/usr/share/fonts/truetype/pragmata/PragmataPro.ttf https://github.com/xpando/Dash/raw/master/Fonts/PragmataPro.ttf
    as_root fc-cache -f -v


    # install extra packages
    install sshfs acpi sqlite3 iftop rfkill rsync make
    install exuberant-ctags silversearcher-ag mlocate

    frill install subversion mercurial linux-headers-generic binutils g++

    # setup stack
    wget -q -O- https://s3.amazonaws.com/download.fpcomplete.com/ubuntu/fpco.key | as_root apt-key add -
    echo "deb http://download.fpcomplete.com/ubuntu/$LSB stable main" | as_root tee -a /etc/apt/sources.list
    as_root apt-get update

    cd
    install stack
    if ["$?" != 0]; then
        # install stack on 32 bit systems
        wget -Ostack.gz https://github.com/commercialhaskell/stack/releases/download/v0.1.2.0/stack-0.1.2.0-i386-linux.gz
        gunzip stack.gz
        as_root mv stack-0.1.2.0-i386-linux /usr/local/bin/stack
        as_root chmod +x /usr/local/bin/stack
    fi

    # and pip
    wget -q -O- https://bootstrap.pypa.io/get-pip.py | as_root python2
}

setup_gui() {
    install terminator cmus avconv aspell aspell-en redshift x11-xserver-utils xclip acpi xterm x11-utils
    install feh dzen2 conky scrot synapse
    install thunar evince gpicview vim-gtk lxrandr
    install pidgin cmus luakit chromium-browser vlc deluge-gtk

    frill install gimp anki texlive-latex-recommended libreoffice

    frill as_root python -c "import sys; py3 = sys.version_info[0] > 2; u = __import__('urllib.request' if py3 else 'urllib', fromlist=1); exec(u.urlopen('http://status.calibre-ebook.com/linux_installer').read()); main()"

    # TODO: get xmonad configs
    stack setup
    stack install xmonad xmonad-contrib
    xmonad --recompile

    frill stack install turtle
    frill pip install beets

    # install cmus posting
    cd $DIR
    mkdir .cmus
    wget https://raw.github.com/jkramer/post-fm/master/post-fm -O .cmus/postfm
    vim .cmus/postfm
    chmod +x .cmus/postfm
}

setup_stats() {
    install python-tk rescuetime imagemagick
    pip install svn+https://python-xlib.svn.sourceforge.net/svnroot/python-xlib/tags/xlib_0_15rc1/
    cd
    git clone https://github.com/gurgeh/selfspy.git .src
    cd .src/selfspy
    as_root python2 setup.py install
}

echo "build types:"
echo -e "\tfull"
echo -e "\theadless"
echo -e "\tbasic"
echo -e "\tuntrusted"

read COMMAND


case "$COMMAND" in
    full)
        warning full
        setup_basic
        setup_env
        setup_extra
        setup_gui
        setup_stats
        purge
        ;;

    basic)
        warning basic
        setup_basic
        setup_env
        purge
        ;;

    headless)
        warning headless
        setup_basic
        setup_env
        setup_extra
        purge
        ;;

    untrusted)
        warning untrusted
        setup_basic
        setup_env
        setup_extra
        setup_gui
        purge
        ;;


    *)
        ;;
esac




# TODO: crontab
